{"version":3,"file":"core.umd.js","sources":["../src/core.js"],"sourcesContent":["const STATE = Symbol('set-state')\nconst END = Symbol('set-state:end')\nconst GUARD = Symbol('set-state:guard')\nconst NODE = Symbol('set-state:node')\nconst isFunction = x => typeof x === 'function'\nconst isState = x => isFunction(x) && x.is === STATE\nconst isNode = x => isFunction(x) && x.is === NODE\nconst isSealed = x => isNode(x) && x.sealed === GUARD\nconst isFrozen = x => isNode(x) && x.compute === END\nconst recompute = node => {\n  const prev = node.value\n  node.value = node.compute()\n  if (prev !== node.value) {\n    Array.from(node.listeners).forEach(fn => fn(node.value, prev))\n  }\n}\nconst eachDep = (node, method) => {\n  Array.from(node.dependencies).forEach(dep => {\n    if (method === 'add' && dep.dependencies.has(node)) {\n      throw new ReferenceError('circular reference created.')\n    }\n    dep.dependents[method](node)\n  })\n}\nconst update = node => {\n  const updating = node.state.updating\n  if (updating.has(node)) updating.delete(node)\n  updating.add(node)\n  Array.from(node.dependents).forEach(update)\n}\n\nlet count = 0\n\nexport default function factory (ctx, fns = []) {\n  let isCapturing = false\n  const capturing = new Set()\n  const updating = new Set()\n  const context = ctx || count++\n  const plugins = new Set(fns)\n  const state = compute => {\n    if (isNode(compute)) return compute\n    const node = new_compute => {\n      if (isCapturing) capturing.add(node)\n      if (isFrozen(node) || isSealed(node)) return node.value\n      if (new_compute !== undefined) {\n        if (new_compute === node.value) return node\n        if (new_compute === GUARD) {\n          node.sealed = GUARD\n          return node\n        }\n        eachDep(node, 'delete')\n        node.dependencies.clear()\n        if (new_compute === END) {\n          node.compute = END\n          return node\n        }\n        node.compute = () => new_compute\n        if (isFunction(new_compute)) {\n          node.compute = new_compute\n          isCapturing = true\n          capturing.clear()\n          recompute(node)\n          capturing.delete(node)\n          node.dependencies = new Set(capturing)\n          isCapturing = false\n          eachDep(node, 'add')\n        } else {\n          recompute(node)\n        }\n        updating.clear()\n        Array.from(node.dependents).forEach(update)\n        Array.from(updating).forEach(recompute)\n      }\n      return node.value\n    }\n    node.locals = {}\n    node.state = state\n    node.is = NODE\n    node.context = context\n    node.listeners = new Set()\n    node.dependents = new Set()\n    node.dependencies = new Set()\n    node.on = (obj, method) => {\n      const fn = isFunction(obj) ? obj : obj[method].bind(obj)\n      node.listeners.add(fn)\n      return () => node.listeners.delete(fn)\n    }\n    node.seal = () => node(GUARD)\n    node.freeze = node.end = () => node(END)\n    node.valueOf = node.toString = () => node.value\n    Array.from(plugins).forEach(plugin => plugin(node))\n    node(compute)\n    return node\n  }\n  state.use = plugin => {\n    plugins.add(plugin)\n    return state\n  }\n  state.isOwnNode = x => isNode(x) && state.context === x.context\n  state.plugins = plugins\n  state.updating = updating\n  state.capturing = capturing\n  state.is = STATE\n  state.of = state\n  state.END = END\n  state.GUARD = GUARD\n  state.isNode = isNode\n  state.freeze = state.end = a => state(a).end()\n  state.seal = a => state(a).seal()\n  state.isSealed = isSealed\n  state.isFrozen = state.isFinished = isFrozen\n  state.context = context\n  return state\n}\n\nfactory.isState = isState\nfactory.state = factory('set-state:core')\n\nexport const state = factory.state\n"],"names":["const","STATE","Symbol","END","GUARD","NODE","isFunction","x","isNode","is","isSealed","sealed","isFrozen","compute","recompute","node","prev","value","Array","from","listeners","forEach","fn","eachDep","method","dependencies","dep","has","ReferenceError","dependents","update","updating","state","delete","add","count","factory","ctx","fns","let","isCapturing","capturing","Set","context","plugins","new_compute","undefined","clear","locals","on","obj","bind","seal","freeze","end","valueOf","toString","plugin","use","isOwnNode","of","a","isFinished","isState"],"mappings":"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"}